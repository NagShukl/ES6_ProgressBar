{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/ProgressBar.js","webpack:///./src/scripts/ButtonPanel.js","webpack:///./src/scripts/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","ProgressBar","Set","ele","pBarModel","_this","limit","updateBarInDom","bars","animateBar","getOriginalData","document","getElementById","innerHTML","JSON","stringify","evt","selectedBar","target","getBarId","getBar","attachStyle","index","parEle","arr","getBars","animate","html","styleDef","style","createElement","type","getElementsByTagName","appendChild","forEach","element","concat","getPerentage","getBarCssClass","getPerentageStyle","barAnimation_prefix","res","cachedPercentage","this","Math","round","add","ButtonPanel","updateProgressBar","updateSelectedBar","ul","li","getProgressBarSelect","getButtonsList","buttons","select","onchange","getProgressBarSelectOptions","option","text","cb","createButton","context","func","button","onclick","model","ProgressBarApp","rootEle","scripts_classCallCheck","scripts_defineProperty","fetch","then","response","json","initBars","catch","error","console","log","pbarDiv","progressBar","renderBars","btnDiv","buttonPanel","renderButtonPanel","id","cls","div","className","init","e","alert"],"mappings":"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","file":"js/app.ddacb3ae.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([104,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default class ProgressBar {\r\n    barAnimation_prefix = 'barAnimation_';\r\n    limit = 100;\r\n    selectedBar = 0;\r\n    // This property is to hold all cached percentages. Its used in generating optimal animation definition.\r\n    // everytime a new percentage generated, will push into this array, then while generating animateclass\r\n    // first will check, whether this animation we already have or not.\r\n    // if not; then only we will add new animation definition.\r\n    cachedPercentage = new Set();\r\n    renderBars = (ele, pBarModel) => {\r\n        this.pBarModel = pBarModel;\r\n        this.limit = pBarModel.limit;\r\n        this.updateBarInDom(ele, this.pBarModel.bars);\r\n        this.animateBar();\r\n        this.getOriginalData();\r\n    }\r\n    getOriginalData = () => {\r\n        document.getElementById('orgData').innerHTML = JSON.stringify(this.pBarModel);\r\n    }\r\n    updateProgressBar = (evt) => {\r\n        this.pBarModel.bars[this.selectedBar] = this.pBarModel.bars[this.selectedBar] + +evt.target.value;\r\n        // If value gets negative; mark it as zero.\r\n        if (this.pBarModel.bars[this.selectedBar] <= 0) {\r\n            this.pBarModel.bars[this.selectedBar] = 0;\r\n        }\r\n        document.getElementById(this.getBarId(this.selectedBar)).innerHTML = this.getBar(this.pBarModel.bars[this.selectedBar], this.selectedBar);\r\n        this.attachStyle(this.animateBar(this.pBarModel.bars[this.selectedBar]));\r\n        this.getOriginalData();\r\n    }\r\n    updateSelectedBar = (evt) => {\r\n        this.selectedBar = evt.target.value;\r\n    }\r\n\r\n    getBarId = (index) => {\r\n        return 'barId_' + index;\r\n    }\r\n\r\n    updateBarInDom = (parEle, arr) => {\r\n        const data = this.getBars(arr);\r\n        this.attachStyle(data.animate);\r\n        parEle.innerHTML = data.html;\r\n    }\r\n    attachStyle = (styleDef) => {\r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        style.innerHTML = styleDef;\r\n        document.getElementsByTagName('head')[0].appendChild(style);\r\n    }\r\n\r\n    getBars = (arr) => {\r\n        let html = '';\r\n        let animateBar = '';\r\n        arr.forEach((element, index) => {\r\n            html += `<div id=\"${this.getBarId(index)}\" class=\"pbar-wrapper\">${this.getBar(element, index)} </div>`;\r\n            animateBar += this.animateBar(element);\r\n        });\r\n        return { 'html': html, 'animate': animateBar };\r\n    };\r\n    getBar = (ele, index) => {\r\n        return `<div class=\"value-div\" id=\"content_${this.getBarId(index)}\">${this.getPerentage(ele)}%</div>\r\n        <div id=\"pBar_${this.getBarId(index)}\" class=\"${this.getBarCssClass(ele)}\" style=\"width: ${this.getPerentageStyle(ele)}%; animation-name: ${this.barAnimation_prefix}${ele};\">&nbsp;</div>\r\n     `;\r\n    };\r\n    /**\r\n     * This method is to return class for progress bar\r\n     */\r\n    getBarCssClass = (ele) => {\r\n        const value = this.getPerentage(ele);\r\n        let res = 'pbar ';\r\n        if (value <= 0) {\r\n            res += 'pbar-below0';\r\n        }\r\n        if (value > 100) {\r\n            res += 'pbar-above100';\r\n        }\r\n        return res;\r\n    }\r\n    getPerentageStyle(ele) {\r\n        const value = this.getPerentage(ele);\r\n        return value <= 100 ? value : 100;\r\n    }\r\n    /**\r\n     * This method i to calculate the percentage of given value against limit\r\n     */\r\n    getPerentage(value) {\r\n        if (value <= 0)\r\n            return 0;\r\n        const res = Math.round((value * 100) / this.limit);\r\n        // Update this value in cachedPercentages set, to verify it animation definition for this % is there or not;\r\n        this.cachedPercentage.add(res);\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * This method is to generate animation style; while generating animation it verifies if this anomation definition already exists or not\r\n     * for optimal performance - its important that if an animation definition is already generated then it should not be generated again.\r\n     */\r\n    animateBar = (ele) => {\r\n        const value = this.getPerentageStyle(ele);\r\n        if (!(value in this.cachedPercentage)) {\r\n            return `@keyframes ${this.barAnimation_prefix}${ele} {\r\n                from {width: 0%;}\r\n                to {width: ${value}%;}\r\n                }`;\r\n        }\r\n        return '';\r\n    };\r\n}\r\n","export default class ButtonPanel {\r\n\r\n    renderButtonPanel = (ele, pBarModel, updateProgressBar, updateSelectedBar) => {\r\n        this.pBarModel = pBarModel;\r\n        const ul = document.createElement('ul');\r\n        const li = document.createElement('li');\r\n        this.getProgressBarSelect(li, pBarModel, updateSelectedBar);\r\n        ul.appendChild(li);\r\n        this.getButtonsList(ul, pBarModel.buttons, updateProgressBar);\r\n        ele.appendChild(ul);\r\n    }\r\n    getProgressBarSelect = (parEle, pBarModel, updateSelectedBar) => {\r\n        const select = document.createElement('select');\r\n        select.onchange = updateSelectedBar;\r\n        this.getProgressBarSelectOptions(select, pBarModel.bars);\r\n        parEle.appendChild(select);\r\n    }\r\n    getProgressBarSelectOptions = (select, arr) => {\r\n        let option;\r\n        arr.forEach((element, index) => {\r\n            option = document.createElement(\"option\");\r\n            option.value = index;\r\n            option.text = 'ProgressBar #' + index;\r\n            select.appendChild(option);\r\n        });\r\n    }\r\n    getButtonsList = (parEle, arr, cb) => {\r\n        arr.forEach(ele => {\r\n            this.createButton(parEle, ele, cb);\r\n        });\r\n    }\r\n    createButton = (context, ele, func) => {\r\n        const li = document.createElement('li');\r\n        const button = document.createElement(\"input\");\r\n        button.type = \"button\";\r\n        button.value = ele;\r\n        button.onclick = func;\r\n        li.appendChild(button);\r\n        context.appendChild(li);\r\n    }\r\n}\r\n","import ProgressBar from './ProgressBar';\r\nimport ButtonPanel from './ButtonPanel';\r\nconst model = { \"bars\": [10, 300, 40, 50, 45, 32, -5], \"buttons\": [-20, 30, -40, 50, -45, 32, -65], \"limit\": 200 };\r\n\r\nexport default class ProgressBarApp {\r\n    pBarModel;\r\n    constructor(rootEle) {\r\n        this.rootEle = rootEle;\r\n        this.pBarModel = model;\r\n\r\n        this.progressBar = new ProgressBar();\r\n        this.buttonPanel = new ButtonPanel();\r\n    }\r\n    init = () => {\r\n        fetch('http://pb-api.herokuapp.com/bars').then(response => response.json())\r\n            .then(data => {\r\n                this.pBarModel = data;\r\n                this.initBars();\r\n            }).catch(error => {\r\n                console.log('Error loading data from api!!! using mock data');\r\n                this.initBars();\r\n            });\r\n\r\n\r\n    }\r\n    initBars = () => {\r\n        const pbarDiv = this.createElement('barContainer', 'pbar-container');\r\n        this.progressBar.renderBars(pbarDiv, this.pBarModel);\r\n        const btnDiv = this.createElement('btnContainer', 'btn-container');\r\n        this.buttonPanel.renderButtonPanel(btnDiv, this.pBarModel, this.progressBar.updateProgressBar, this.progressBar.updateSelectedBar);\r\n        this.rootEle.appendChild(pbarDiv);\r\n        this.rootEle.appendChild(btnDiv);\r\n    }\r\n    createElement = (id, cls) => {\r\n        const div = document.createElement('div');\r\n        div.id = id;\r\n        div.className = cls;\r\n        return div;\r\n    }\r\n}\r\n\r\ntry {\r\n    if (ProgressBarApp)\r\n        (function () {\r\n            new ProgressBarApp(document.getElementById('appContainer')).init();\r\n        })();\r\n} catch (e) { alert('ProgressBarApp not loaded') }\r\n\r\n\r\n"],"sourceRoot":""}